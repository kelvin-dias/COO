// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Context;

namespace Persistencia.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20191011150559_Inicial 1.0")]
    partial class Inicial10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Entidades.Backup", b =>
                {
                    b.Property<long?>("BackupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assinatura");

                    b.Property<DateTime>("DataHora");

                    b.Property<DateTime>("DataHoraExecucao");

                    b.Property<int>("DestinoGravacao");

                    b.Property<int>("PeriodoExecucao");

                    b.Property<long?>("ServidorId");

                    b.HasKey("BackupId");

                    b.HasIndex("ServidorId");

                    b.ToTable("Backups");
                });

            modelBuilder.Entity("Modelo.Entidades.Contato", b =>
                {
                    b.Property<long?>("ContatoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Empresa");

                    b.Property<long>("NumeroTelefone");

                    b.Property<string>("Obscervacao");

                    b.Property<string>("TipoServico");

                    b.HasKey("ContatoId");

                    b.ToTable("CONTATOS");
                });

            modelBuilder.Entity("Modelo.Entidades.Ocorrencia", b =>
                {
                    b.Property<long?>("OcorrenciaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CriticidadeOcorrencia");

                    b.Property<DateTime>("DataHora");

                    b.Property<long>("NumeroOcorrencia");

                    b.Property<string>("Solucao");

                    b.Property<int>("StatusOcorrencia");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.HasKey("OcorrenciaId");

                    b.ToTable("OCORRENCIAS");
                });

            modelBuilder.Entity("Modelo.Entidades.OcorrenciaIteracao", b =>
                {
                    b.Property<long?>("OcorrenciaIteracaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assinatura");

                    b.Property<DateTime>("DataHoraIteracao");

                    b.Property<long?>("OcorrenciaId");

                    b.Property<string>("TextoIteracao");

                    b.HasKey("OcorrenciaIteracaoId");

                    b.HasIndex("OcorrenciaId");

                    b.ToTable("ITERACOES_OCORRENCIAS");
                });

            modelBuilder.Entity("Modelo.Entidades.Rotina", b =>
                {
                    b.Property<int>("RotinaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assinatura");

                    b.Property<int>("Execucao");

                    b.Property<string>("Nome");

                    b.Property<int>("OrdemDeServico");

                    b.Property<string>("ResponsavelDaRotina");

                    b.HasKey("RotinaId");

                    b.ToTable("ROTINAS");
                });

            modelBuilder.Entity("Modelo.Entidades.Servidor", b =>
                {
                    b.Property<long?>("ServidorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteServidor");

                    b.Property<long?>("BackupId");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("ServidorIp")
                        .IsRequired();

                    b.HasKey("ServidorId");

                    b.HasIndex("BackupId");

                    b.ToTable("SERVIDORES");
                });

            modelBuilder.Entity("Modelo.Entidades.Backup", b =>
                {
                    b.HasOne("Modelo.Entidades.Servidor")
                        .WithMany("BackupServidor")
                        .HasForeignKey("ServidorId");
                });

            modelBuilder.Entity("Modelo.Entidades.OcorrenciaIteracao", b =>
                {
                    b.HasOne("Modelo.Entidades.Ocorrencia", "Ocorrencia")
                        .WithMany("Iteracoes")
                        .HasForeignKey("OcorrenciaId");
                });

            modelBuilder.Entity("Modelo.Entidades.Servidor", b =>
                {
                    b.HasOne("Modelo.Entidades.Backup", "Backup")
                        .WithMany()
                        .HasForeignKey("BackupId");
                });
#pragma warning restore 612, 618
        }
    }
}
